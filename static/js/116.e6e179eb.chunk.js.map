{"version":3,"file":"static/js/116.e6e179eb.chunk.js","mappings":"+SAEMA,EAAU,mCAWHC,EAAmB,mCAAG,6GAERC,EAAAA,EAAAA,IACrB,kDACA,CACEC,OAAQ,CACNC,QAAQ,GAAD,OAAKJ,MANa,cAEzBK,EAFyB,yBAUxBA,EAASC,KAAKC,SAVU,sCAY/BC,QAAQC,MAAM,kCAAd,MAZ+B,8DAAH,qDAiBnBC,EAAY,mCAAG,WAAMC,GAAN,gGAEDT,EAAAA,EAAAA,IACrB,4CACA,CACEC,OAAQ,CACNC,QAAQ,GAAD,OAAKJ,GACZW,MAAOA,KAPW,cAElBN,EAFkB,yBAWjBA,EAASC,KAAKC,SAXG,sCAaxBC,QAAQC,MAAM,0BAAd,MAbwB,8DAAH,sDAkBZG,EAAiB,mCAAG,WAAMC,GAAN,gGAENX,EAAAA,EAAAA,IAAA,6CACiBW,GACtC,CACEV,OAAQ,CACNC,QAASJ,KANc,cAEvBK,EAFuB,yBAUtBA,EAASC,MAVa,sCAY7BE,QAAQC,MAAM,gCAAd,MAZ6B,8DAAH,sDAiBjBK,EAAiB,mCAAG,WAAMD,GAAN,gGAENX,EAAAA,EAAAA,IAAA,6CACiBW,EADjB,YAErB,CACEV,OAAQ,CACNC,QAASJ,KANc,cAEvBK,EAFuB,yBAUtBA,EAASC,MAVa,sCAY7BE,QAAQC,MAAM,gCAAd,MAZ6B,8DAAH,sDAiBjBM,EAAiB,mCAAG,WAAMF,GAAN,gGAENX,EAAAA,EAAAA,IAAA,6CACiBW,EADjB,YAErB,CACEV,OAAQ,CACNC,QAASJ,KANc,cAEvBK,EAFuB,yBAUtBA,EAASC,KAAKC,SAVQ,sCAY7BC,QAAQC,MAAM,gCAAd,MAZ6B,8DAAH,qD,iHC7B9B,UAjDkB,WAChB,OAAuBO,EAAAA,EAAAA,MAAhBC,GAAP,eACA,GAAoCC,EAAAA,EAAAA,UAAS,MAA7C,eAAOC,EAAP,KAAmBC,EAAnB,KACMC,EAAUJ,EAAaK,IAAI,MAejC,IAbAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAY,mCAAG,8GAEKZ,EAAAA,EAAAA,IAAkBS,GAFvB,OAEXI,EAFW,OAGjBL,EAAcK,GAHG,gDAKjBjB,QAAQC,MAAM,gCAAd,MALiB,yDAAH,qDASlBe,GACD,GAAE,CAACH,KAECF,EACH,OAAO,wCAQT,OACE,4BACE,4BACE,gBAAKO,IARS,SAACC,GAAyB,IAAnBC,EAAkB,uDAAX,OAC1BC,EAAU,8BAChB,MAAM,GAAN,OAAUA,GAAV,OAAoBD,EAApB,YAA4BD,EAC7B,CAKeG,CAAYX,EAAWY,aAAcC,IAAKb,EAAWc,SAC/D,wBAAKd,EAAWc,SAChB,uBAAId,EAAWe,gBACf,sCACA,uBAAIf,EAAWgB,YACf,oCACA,uBAAIhB,EAAWiB,OAAOC,KAAI,SAAAC,GAAK,OAAIA,EAAMC,IAAV,IAAgBC,KAAK,YAEtD,4BACE,kBACA,SAAC,KAAD,CAAMC,GAAE,kBAAapB,GAArB,mBACA,SAAC,KAAD,CAAMoB,GAAE,qBAAgBpB,GAAxB,yBAEF,0BACE,SAAC,KAAD,QAIP,C","sources":["components/Fetch/Fetch.jsx","components/MovieCard/MovieCard.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst API_KEY = '79f2702b42ceb404ad51283cd44db6ad';\n\n// const options = {\n//   method: 'GET',\n//   headers: {\n//     accept: 'application/json',\n//     Authorization:\n//       'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiI3OWYyNzAyYjQyY2ViNDA0YWQ1MTI4M2NkNDRkYjZhZCIsInN1YiI6IjY0ZDM5ZDJiZDEwMGI2MDExYzdmNzBhZSIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.BifGGdJywk4EmXVYKaUktT-qpuUure1RwuYsX7v1VLQ',\n//   },\n// };\n\nexport const fetchTrendingMovies = async () => {\n  try {\n    const response = await axios.get(\n      'https://api.themoviedb.org/3/trending/movie/day',\n      {\n        params: {\n          api_key: `${API_KEY}`,\n        },\n      }\n    );\n    return response.data.results;\n  } catch (error) {\n    console.error('Error fetching trending movies:', error);\n    throw error;\n  }\n};\n\nexport const handleSearch = async query => {\n  try {\n    const response = await axios.get(\n      'https://api.themoviedb.org/3/search/movie',\n      {\n        params: {\n          api_key: `${API_KEY}`,\n          query: query,\n        },\n      }\n    );\n    return response.data.results;\n  } catch (error) {\n    console.error('Error searching movies:', error);\n    throw error;\n  }\n};\n\nexport const fetchMovieDetails = async movieId => {\n  try {\n    const response = await axios.get(\n      `https://api.themoviedb.org/3/movie/${movieId}`,\n      {\n        params: {\n          api_key: API_KEY,\n        },\n      }\n    );\n    return response.data; \n  } catch (error) {\n    console.error('Error fetching movie details:', error);\n    throw error;\n  }\n};\n\nexport const fetchMovieCredits = async movieId => {\n  try {\n    const response = await axios.get(\n      `https://api.themoviedb.org/3/movie/${movieId}/credits`,\n      {\n        params: {\n          api_key: API_KEY,\n        },\n      }\n    );\n    return response.data; // Повертаємо отриману відповідь\n  } catch (error) {\n    console.error('Error fetching movie credits:', error);\n    throw error;\n  }\n};\n\nexport const fetchMovieReviews = async movieId => {\n  try {\n    const response = await axios.get(\n      `https://api.themoviedb.org/3/movie/${movieId}/reviews`,\n      {\n        params: {\n          api_key: API_KEY,\n        },\n      }\n    );\n    return response.data.results; // Повертаємо масив оглядів\n  } catch (error) {\n    console.error('Error fetching movie reviews:', error);\n    throw error;\n  }\n};","import React, { useState, useEffect } from 'react';\nimport { Link, Outlet, useSearchParams } from 'react-router-dom';\nimport { fetchMovieDetails } from '../Fetch/Fetch';\n\nconst MovieCard = () => {\n  const [searchParams] = useSearchParams();\n  const [moviesById, setMoviesById] = useState(null);\n  const movieID = searchParams.get('id');\n\n  useEffect(() => {\n    const fetchDetails = async () => {\n      try {\n        const details = await fetchMovieDetails(movieID);\n        setMoviesById(details);\n      } catch (error) {\n        console.error('Error fetching movie details:', error);\n      }\n    };\n\n    fetchDetails();\n  }, [movieID]);\n\n  if (!moviesById) {\n    return <div>Loading...</div>;\n  }\n\n  const getImageUrl = (path, size = 'w500') => {\n    const baseUrl = 'https://image.tmdb.org/t/p/';\n    return `${baseUrl}${size}/${path}`;\n  };\n\n  return (\n    <div>\n      <div>\n        <img src={getImageUrl(moviesById.poster_path)} alt={moviesById.title} />\n        <h4>{moviesById.title}</h4>\n        <p>{moviesById.vote_average}</p>\n        <h4>Overviev</h4>\n        <p>{moviesById.overview}</p>\n        <h4>Genres</h4>\n        <p>{moviesById.genres.map(genre => genre.name).join(', ')}</p>\n      </div>\n      <div>\n        <p></p>\n        <Link to={`cast?id=${movieID}`}>Cast</Link>\n        <Link to={`reviews?id=${movieID}`}>Revievs</Link>\n      </div>\n      <div>\n        <Outlet />\n      </div>\n    </div>\n  );\n};\nexport default MovieCard;\n"],"names":["API_KEY","fetchTrendingMovies","axios","params","api_key","response","data","results","console","error","handleSearch","query","fetchMovieDetails","movieId","fetchMovieCredits","fetchMovieReviews","useSearchParams","searchParams","useState","moviesById","setMoviesById","movieID","get","useEffect","fetchDetails","details","src","path","size","baseUrl","getImageUrl","poster_path","alt","title","vote_average","overview","genres","map","genre","name","join","to"],"sourceRoot":""}