{"version":3,"file":"static/js/247.5e53272d.chunk.js","mappings":"wNAqCA,UAjCa,WACX,OAAuBA,EAAAA,EAAAA,MAAhBC,GAAP,eACA,GAAwBC,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACMC,EAAUJ,EAAaK,IAAI,MAcjC,OAbAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAY,mCAAG,8GAEKC,EAAAA,EAAAA,IAAkBJ,GAFvB,OAEXK,EAFW,OAGjBN,EAAQM,EAAQP,MAHC,gDAKjBQ,QAAQC,MAAM,gCAAd,MALiB,yDAAH,qDASlBJ,GACD,GAAE,CAACH,IAECF,GAIH,4BACE,mCACA,wBACGA,EAAKU,KAAI,SAAAC,GAAK,OACb,0BACGA,EAAMC,KADT,OACmBD,EAAME,YADhBF,EAAMG,GADF,UANZ,uCAcV,C,+LClCKC,EAAU,mCAWHC,EAAmB,mCAAG,6GAERC,EAAAA,EAAAA,IACrB,kDACA,CACEC,OAAQ,CACNC,QAAQ,GAAD,OAAKJ,MANa,cAEzBK,EAFyB,yBAUxBA,EAASC,KAAKC,SAVU,sCAY/Bd,QAAQC,MAAM,kCAAd,MAZ+B,8DAAH,qDAiBnBc,EAAY,mCAAG,WAAMC,GAAN,gGAEDP,EAAAA,EAAAA,IACrB,4CACA,CACEC,OAAQ,CACNC,QAAQ,GAAD,OAAKJ,GACZS,MAAOA,KAPW,cAElBJ,EAFkB,yBAWjBA,EAASC,KAAKC,SAXG,sCAaxBd,QAAQC,MAAM,0BAAd,MAbwB,8DAAH,sDAkBZgB,EAAiB,mCAAG,WAAMC,GAAN,gGAENT,EAAAA,EAAAA,IAAA,6CACiBS,GACtC,CACER,OAAQ,CACNC,QAASJ,KANc,cAEvBK,EAFuB,yBAUtBA,EAASC,MAVa,sCAY7Bb,QAAQC,MAAM,gCAAd,MAZ6B,8DAAH,sDAiBjBH,EAAiB,mCAAG,WAAMoB,GAAN,gGAENT,EAAAA,EAAAA,IAAA,6CACiBS,EADjB,YAErB,CACER,OAAQ,CACNC,QAASJ,KANc,cAEvBK,EAFuB,yBAUtBA,EAASC,MAVa,sCAY7Bb,QAAQC,MAAM,gCAAd,MAZ6B,8DAAH,sDAiBjBkB,EAAiB,mCAAG,WAAMD,GAAN,gGAENT,EAAAA,EAAAA,IAAA,6CACiBS,EADjB,YAErB,CACER,OAAQ,CACNC,QAASJ,KANc,cAEvBK,EAFuB,yBAUtBA,EAASC,KAAKC,SAVQ,sCAY7Bd,QAAQC,MAAM,gCAAd,MAZ6B,8DAAH,qD","sources":["components/Cast/Cast.jsx","components/Fetch/Fetch.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { fetchMovieCredits } from 'components/Fetch/Fetch';\nimport { useSearchParams } from 'react-router-dom';\n\nconst Cast = () => {\n  const [searchParams] = useSearchParams();\n  const [cast, setCast] = useState([]);\n  const movieID = searchParams.get('id');\n  useEffect(() => {\n    const fetchDetails = async () => {\n      try {\n        const credits = await fetchMovieCredits(movieID);\n        setCast(credits.cast);\n      } catch (error) {\n        console.error('Error fetching movie details:', error);\n      }\n    };\n\n    fetchDetails();\n  }, [movieID]);\n\n  if (!cast) {\n    return <div>Loading...</div>;\n  }\n  return (\n    <div>\n      <h3>Cast:</h3>\n      <ul>\n        {cast.map(actor => (\n          <li key={actor.id}>\n            {actor.name} as {actor.character}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\nexport default Cast;\n","import axios from 'axios';\n\nconst API_KEY = '79f2702b42ceb404ad51283cd44db6ad';\n\n// const options = {\n//   method: 'GET',\n//   headers: {\n//     accept: 'application/json',\n//     Authorization:\n//       'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiI3OWYyNzAyYjQyY2ViNDA0YWQ1MTI4M2NkNDRkYjZhZCIsInN1YiI6IjY0ZDM5ZDJiZDEwMGI2MDExYzdmNzBhZSIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.BifGGdJywk4EmXVYKaUktT-qpuUure1RwuYsX7v1VLQ',\n//   },\n// };\n\nexport const fetchTrendingMovies = async () => {\n  try {\n    const response = await axios.get(\n      'https://api.themoviedb.org/3/trending/movie/day',\n      {\n        params: {\n          api_key: `${API_KEY}`,\n        },\n      }\n    );\n    return response.data.results;\n  } catch (error) {\n    console.error('Error fetching trending movies:', error);\n    throw error;\n  }\n};\n\nexport const handleSearch = async query => {\n  try {\n    const response = await axios.get(\n      'https://api.themoviedb.org/3/search/movie',\n      {\n        params: {\n          api_key: `${API_KEY}`,\n          query: query,\n        },\n      }\n    );\n    return response.data.results;\n  } catch (error) {\n    console.error('Error searching movies:', error);\n    throw error;\n  }\n};\n\nexport const fetchMovieDetails = async movieId => {\n  try {\n    const response = await axios.get(\n      `https://api.themoviedb.org/3/movie/${movieId}`,\n      {\n        params: {\n          api_key: API_KEY,\n        },\n      }\n    );\n    return response.data; \n  } catch (error) {\n    console.error('Error fetching movie details:', error);\n    throw error;\n  }\n};\n\nexport const fetchMovieCredits = async movieId => {\n  try {\n    const response = await axios.get(\n      `https://api.themoviedb.org/3/movie/${movieId}/credits`,\n      {\n        params: {\n          api_key: API_KEY,\n        },\n      }\n    );\n    return response.data; // Повертаємо отриману відповідь\n  } catch (error) {\n    console.error('Error fetching movie credits:', error);\n    throw error;\n  }\n};\n\nexport const fetchMovieReviews = async movieId => {\n  try {\n    const response = await axios.get(\n      `https://api.themoviedb.org/3/movie/${movieId}/reviews`,\n      {\n        params: {\n          api_key: API_KEY,\n        },\n      }\n    );\n    return response.data.results; // Повертаємо масив оглядів\n  } catch (error) {\n    console.error('Error fetching movie reviews:', error);\n    throw error;\n  }\n};"],"names":["useSearchParams","searchParams","useState","cast","setCast","movieID","get","useEffect","fetchDetails","fetchMovieCredits","credits","console","error","map","actor","name","character","id","API_KEY","fetchTrendingMovies","axios","params","api_key","response","data","results","handleSearch","query","fetchMovieDetails","movieId","fetchMovieReviews"],"sourceRoot":""}