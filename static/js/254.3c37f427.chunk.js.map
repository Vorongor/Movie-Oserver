{"version":3,"file":"static/js/254.3c37f427.chunk.js","mappings":"+SAEMA,EAAU,mCAWHC,EAAmB,mCAAG,6GAERC,EAAAA,EAAAA,IACrB,kDACA,CACEC,OAAQ,CACNC,QAAQ,GAAD,OAAKJ,MANa,cAEzBK,EAFyB,yBAUxBA,EAASC,KAAKC,SAVU,sCAY/BC,QAAQC,MAAM,kCAAd,MAZ+B,8DAAH,qDAiBnBC,EAAY,mCAAG,WAAMC,GAAN,gGAEDT,EAAAA,EAAAA,IACrB,4CACA,CACEC,OAAQ,CACNC,QAAQ,GAAD,OAAKJ,GACZW,MAAOA,KAPW,cAElBN,EAFkB,yBAWjBA,EAASC,KAAKC,SAXG,sCAaxBC,QAAQC,MAAM,0BAAd,MAbwB,8DAAH,sDAkBZG,EAAiB,mCAAG,WAAMC,GAAN,gGAENX,EAAAA,EAAAA,IAAA,6CACiBW,GACtC,CACEV,OAAQ,CACNC,QAASJ,KANc,cAEvBK,EAFuB,yBAUtBA,EAASC,MAVa,sCAY7BE,QAAQC,MAAM,gCAAd,MAZ6B,8DAAH,sDAiBjBK,EAAiB,mCAAG,WAAMD,GAAN,gGAENX,EAAAA,EAAAA,IAAA,6CACiBW,EADjB,YAErB,CACEV,OAAQ,CACNC,QAASJ,KANc,cAEvBK,EAFuB,yBAUtBA,EAASC,MAVa,sCAY7BE,QAAQC,MAAM,gCAAd,MAZ6B,8DAAH,sDAkCjBM,EAAiB,mCAAG,WAAMF,GAAN,gGAENX,EAAAA,EAAAA,IAAA,6CACiBW,EADjB,YAErB,CACEV,OAAQ,CACNC,QAASJ,KANc,cAEvBK,EAFuB,yBAUtBA,EAASC,KAAKC,SAVQ,sCAY7BC,QAAQC,MAAM,gCAAd,MAZ6B,8DAAH,qD,8IClG9B,EAA0B,2BAA1B,EAAgE,4BAAhE,EAAkG,uBAAlG,EAAmI,2BAAnI,EAAsK,yBAAtK,EAAyM,2BAAzM,EAA2O,wB,SCyE3O,EArEkB,WAAO,IAAD,IACtB,GAAuBO,EAAAA,EAAAA,MAAhBC,GAAP,eACA,GAAoCC,EAAAA,EAAAA,UAAS,MAA7C,eAAOC,EAAP,KAAmBC,EAAnB,KACMC,EAAUJ,EAAaK,IAAI,MAG3BC,EAAY,qBADDC,EAAAA,EAAAA,MACaC,aAAZ,aAAG,EAAgBC,YAAnB,QAA2B,2BAe7C,IAbAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAY,mCAAG,8GAEKhB,EAAAA,EAAAA,IAAkBS,GAFvB,OAEXQ,EAFW,OAGjBT,EAAcS,GAHG,gDAKjBrB,QAAQC,MAAM,gCAAd,MALiB,yDAAH,qDASlBmB,GACD,GAAE,CAACP,KAECF,EACH,OAAO,wCAQT,OACE,iBAAKW,UAAWC,EAAhB,WACE,iBAAKD,UAAWC,EAAhB,WACE,gBACED,UAAWC,EACXC,IAVY,SAACC,GAAyB,IAAnBC,EAAkB,uDAAX,OAC1BC,EAAU,8BAChB,MAAM,GAAN,OAAUA,GAAV,OAAoBD,EAApB,YAA4BD,EAC7B,CAOYG,CAAYjB,EAAWkB,aAC5BC,IAAKnB,EAAWoB,SAElB,iBAAKT,UAAWC,EAAhB,WACE,wBAAKZ,EAAWoB,SAChB,uCAAepB,EAAWqB,iBAC1B,0BACE,iBAAMV,UAAWC,EAAjB,yBACA,kBAFF,IAEUZ,EAAWsB,aAErB,0BACE,iBAAMX,UAAWC,EAAjB,qBACA,kBACCZ,EAAWuB,OAAOC,KAAI,SAAAC,GAAK,OAAIA,EAAMC,IAAV,IAAgBC,KAAK,gBAIvD,iBAAKhB,UAAWC,EAAhB,WACE,SAAC,KAAD,CAAMD,UAAWC,EAAYgB,GAAE,kBAAa1B,GAA5C,mBAGA,SAAC,KAAD,CAAMS,UAAWC,EAAYgB,GAAE,qBAAgB1B,GAA/C,sBAGA,SAAC,KAAD,CAAMS,UAAWC,EAAYgB,GAAIxB,EAAjC,sBAIF,0BACE,SAAC,KAAD,QAIP,C","sources":["components/Fetch/Fetch.jsx","webpack://goit-react-hw-05-movies/./src/components/MovieCard/MovieCard.module.css?a4e5","components/MovieCard/MovieCard.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst API_KEY = '79f2702b42ceb404ad51283cd44db6ad';\n\n// const options = {\n//   method: 'GET',\n//   headers: {\n//     accept: 'application/json',\n//     Authorization:\n//       'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiI3OWYyNzAyYjQyY2ViNDA0YWQ1MTI4M2NkNDRkYjZhZCIsInN1YiI6IjY0ZDM5ZDJiZDEwMGI2MDExYzdmNzBhZSIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.BifGGdJywk4EmXVYKaUktT-qpuUure1RwuYsX7v1VLQ',\n//   },\n// };\n\nexport const fetchTrendingMovies = async () => {\n  try {\n    const response = await axios.get(\n      'https://api.themoviedb.org/3/trending/movie/day',\n      {\n        params: {\n          api_key: `${API_KEY}`,\n        },\n      }\n    );\n    return response.data.results;\n  } catch (error) {\n    console.error('Error fetching trending movies:', error);\n    throw error;\n  }\n};\n\nexport const handleSearch = async query => {\n  try {\n    const response = await axios.get(\n      'https://api.themoviedb.org/3/search/movie',\n      {\n        params: {\n          api_key: `${API_KEY}`,\n          query: query,\n        },\n      }\n    );\n    return response.data.results;\n  } catch (error) {\n    console.error('Error searching movies:', error);\n    throw error;\n  }\n};\n\nexport const fetchMovieDetails = async movieId => {\n  try {\n    const response = await axios.get(\n      `https://api.themoviedb.org/3/movie/${movieId}`,\n      {\n        params: {\n          api_key: API_KEY,\n        },\n      }\n    );\n    return response.data; \n  } catch (error) {\n    console.error('Error fetching movie details:', error);\n    throw error;\n  }\n};\n\nexport const fetchMovieCredits = async movieId => {\n  try {\n    const response = await axios.get(\n      `https://api.themoviedb.org/3/movie/${movieId}/credits`,\n      {\n        params: {\n          api_key: API_KEY,\n        },\n      }\n    );\n    return response.data; // Повертаємо отриману відповідь\n  } catch (error) {\n    console.error('Error fetching movie credits:', error);\n    throw error;\n  }\n};\n\nexport const fetchActorDetails = async actorId => {\n  try {\n    const response = await axios.get(\n      `https://api.themoviedb.org/3/person/${actorId}`,\n      {\n        params: {\n          api_key: API_KEY,\n        },\n      }\n    );\n    return response.data; // Повертаємо отриману відповідь\n  } catch (error) {\n    console.error('Error fetching actor details:', error);\n    throw error;\n  }\n};\n\nexport const fetchMovieReviews = async movieId => {\n  try {\n    const response = await axios.get(\n      `https://api.themoviedb.org/3/movie/${movieId}/reviews`,\n      {\n        params: {\n          api_key: API_KEY,\n        },\n      }\n    );\n    return response.data.results; // Повертаємо масив оглядів\n  } catch (error) {\n    console.error('Error fetching movie reviews:', error);\n    throw error;\n  }\n};","// extracted by mini-css-extract-plugin\nexport default {\"mainBox\":\"MovieCard_mainBox__F8kTg\",\"movieBox\":\"MovieCard_movieBox__BBL8l\",\"img\":\"MovieCard_img__YZsvZ\",\"textBox\":\"MovieCard_textBox__AOCu2\",\"topic\":\"MovieCard_topic__5JUz5\",\"linkBox\":\"MovieCard_linkBox__-VmO8\",\"link\":\"MovieCard_link__EvibY\"};","import React, { useState, useEffect } from 'react';\nimport { Link, Outlet, useSearchParams, useLocation  } from 'react-router-dom';\nimport { fetchMovieDetails } from '../Fetch/Fetch';\nimport style from './MovieCard.module.css';\n\nconst MovieCard = () => {\n  const [searchParams] = useSearchParams();\n  const [moviesById, setMoviesById] = useState(null);\n  const movieID = searchParams.get('id');\n\n  const location = useLocation();\n  const backLinkHref = location.state?.from ?? \"/goit-react-hw-05-movies\";\n\n  useEffect(() => {\n    const fetchDetails = async () => {\n      try {\n        const details = await fetchMovieDetails(movieID);\n        setMoviesById(details);\n      } catch (error) {\n        console.error('Error fetching movie details:', error);\n      }\n    };\n\n    fetchDetails();\n  }, [movieID]);\n\n  if (!moviesById) {\n    return <div>Loading...</div>;\n  }\n\n  const getImageUrl = (path, size = 'w500') => {\n    const baseUrl = 'https://image.tmdb.org/t/p/';\n    return `${baseUrl}${size}/${path}`;\n  };\n\n  return (\n    <div className={style.mainBox}>\n      <div className={style.movieBox}>\n        <img\n          className={style.img}\n          src={getImageUrl(moviesById.poster_path)}\n          alt={moviesById.title}\n        />\n        <div className={style.textBox}>\n          <h4>{moviesById.title}</h4>\n          <p>User Score:{moviesById.vote_average}</p>\n          <p>\n            <span className={style.topic}> Overviev:</span>\n            <br /> {moviesById.overview}\n          </p>\n          <p>\n            <span className={style.topic}>Genres</span>\n            <br />\n            {moviesById.genres.map(genre => genre.name).join(', ')}\n          </p>\n        </div>\n      </div>\n      <div className={style.linkBox}>\n        <Link className={style.link} to={`cast?id=${movieID}`}>\n          Cast\n        </Link>\n        <Link className={style.link} to={`reviews?id=${movieID}`}>\n          Revievs\n        </Link>\n        <Link className={style.link} to={backLinkHref}>\n          Back\n        </Link>\n      </div>\n      <div>\n        <Outlet />\n      </div>\n    </div>\n  );\n};\nexport default MovieCard;\n"],"names":["API_KEY","fetchTrendingMovies","axios","params","api_key","response","data","results","console","error","handleSearch","query","fetchMovieDetails","movieId","fetchMovieCredits","fetchMovieReviews","useSearchParams","searchParams","useState","moviesById","setMoviesById","movieID","get","backLinkHref","useLocation","state","from","useEffect","fetchDetails","details","className","style","src","path","size","baseUrl","getImageUrl","poster_path","alt","title","vote_average","overview","genres","map","genre","name","join","to"],"sourceRoot":""}