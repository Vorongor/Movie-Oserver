{"version":3,"file":"static/js/463.fcaf1683.chunk.js","mappings":"+SAEMA,EAAU,mCAWHC,EAAmB,mCAAG,6GAERC,EAAAA,EAAAA,IACrB,kDACA,CACEC,OAAQ,CACNC,QAAQ,GAAD,OAAKJ,MANa,cAEzBK,EAFyB,yBAUxBA,EAASC,KAAKC,SAVU,sCAY/BC,QAAQC,MAAM,kCAAd,MAZ+B,8DAAH,qDAiBnBC,EAAY,mCAAG,WAAMC,GAAN,gGAEDT,EAAAA,EAAAA,IACrB,4CACA,CACEC,OAAQ,CACNC,QAAQ,GAAD,OAAKJ,GACZW,MAAOA,KAPW,cAElBN,EAFkB,yBAWjBA,EAASC,KAAKC,SAXG,sCAaxBC,QAAQC,MAAM,0BAAd,MAbwB,8DAAH,sDAkBZG,EAAiB,mCAAG,WAAMC,GAAN,gGAENX,EAAAA,EAAAA,IAAA,6CACiBW,GACtC,CACEV,OAAQ,CACNC,QAASJ,KANc,cAEvBK,EAFuB,yBAUtBA,EAASC,MAVa,sCAY7BE,QAAQC,MAAM,gCAAd,MAZ6B,8DAAH,sDAiBjBK,EAAiB,mCAAG,WAAMD,GAAN,gGAENX,EAAAA,EAAAA,IAAA,6CACiBW,EADjB,YAErB,CACEV,OAAQ,CACNC,QAASJ,KANc,cAEvBK,EAFuB,yBAUtBA,EAASC,MAVa,sCAY7BE,QAAQC,MAAM,gCAAd,MAZ6B,8DAAH,sDAiBjBM,EAAiB,mCAAG,WAAMF,GAAN,gGAENX,EAAAA,EAAAA,IAAA,6CACiBW,EADjB,YAErB,CACEV,OAAQ,CACNC,QAASJ,KANc,cAEvBK,EAFuB,yBAUtBA,EAASC,KAAKC,SAVQ,sCAY7BC,QAAQC,MAAM,gCAAd,MAZ6B,8DAAH,qD,wGCvC9B,UAvCkB,WAChB,OAA4CO,EAAAA,EAAAA,UAAS,IAArD,eAAOC,EAAP,KAAuBC,EAAvB,KAoBA,OAlBAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAa,mCAAG,8GAEGnB,EAAAA,EAAAA,MAFH,OAEZoB,EAFY,OAGlBH,EAAkBG,GAHA,gDAKlBb,QAAQC,MAAM,kCAAd,MALkB,yDAAH,qDASnBW,GACD,GAAE,KAQD,4BACE,mDACA,wBACGH,EAAeK,KAAI,SAAAC,GAAK,OACvB,yBACE,SAAC,KAAD,CAAMC,GAAE,4CAAuCD,EAAME,IAArD,UACE,0BACE,uBAAIF,EAAMG,aAHPH,EAAME,GADQ,QAYhC,C","sources":["components/Fetch/Fetch.jsx","pages/TrendList.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst API_KEY = '79f2702b42ceb404ad51283cd44db6ad';\n\n// const options = {\n//   method: 'GET',\n//   headers: {\n//     accept: 'application/json',\n//     Authorization:\n//       'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiI3OWYyNzAyYjQyY2ViNDA0YWQ1MTI4M2NkNDRkYjZhZCIsInN1YiI6IjY0ZDM5ZDJiZDEwMGI2MDExYzdmNzBhZSIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.BifGGdJywk4EmXVYKaUktT-qpuUure1RwuYsX7v1VLQ',\n//   },\n// };\n\nexport const fetchTrendingMovies = async () => {\n  try {\n    const response = await axios.get(\n      'https://api.themoviedb.org/3/trending/movie/day',\n      {\n        params: {\n          api_key: `${API_KEY}`,\n        },\n      }\n    );\n    return response.data.results;\n  } catch (error) {\n    console.error('Error fetching trending movies:', error);\n    throw error;\n  }\n};\n\nexport const handleSearch = async query => {\n  try {\n    const response = await axios.get(\n      'https://api.themoviedb.org/3/search/movie',\n      {\n        params: {\n          api_key: `${API_KEY}`,\n          query: query,\n        },\n      }\n    );\n    return response.data.results;\n  } catch (error) {\n    console.error('Error searching movies:', error);\n    throw error;\n  }\n};\n\nexport const fetchMovieDetails = async movieId => {\n  try {\n    const response = await axios.get(\n      `https://api.themoviedb.org/3/movie/${movieId}`,\n      {\n        params: {\n          api_key: API_KEY,\n        },\n      }\n    );\n    return response.data; \n  } catch (error) {\n    console.error('Error fetching movie details:', error);\n    throw error;\n  }\n};\n\nexport const fetchMovieCredits = async movieId => {\n  try {\n    const response = await axios.get(\n      `https://api.themoviedb.org/3/movie/${movieId}/credits`,\n      {\n        params: {\n          api_key: API_KEY,\n        },\n      }\n    );\n    return response.data; // Повертаємо отриману відповідь\n  } catch (error) {\n    console.error('Error fetching movie credits:', error);\n    throw error;\n  }\n};\n\nexport const fetchMovieReviews = async movieId => {\n  try {\n    const response = await axios.get(\n      `https://api.themoviedb.org/3/movie/${movieId}/reviews`,\n      {\n        params: {\n          api_key: API_KEY,\n        },\n      }\n    );\n    return response.data.results; // Повертаємо масив оглядів\n  } catch (error) {\n    console.error('Error fetching movie reviews:', error);\n    throw error;\n  }\n};","import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { fetchTrendingMovies } from '../components/Fetch/Fetch';\n\nconst TrendList = () => {\n  const [trendingMovies, setTrendingMovies] = useState([]);\n\n  useEffect(() => {\n    const fetchTrending = async () => {\n      try {\n        const result = await fetchTrendingMovies();\n        setTrendingMovies(result);\n      } catch (error) {\n        console.error('Error fetching trending movies:', error);\n      }\n    };\n\n    fetchTrending();\n  }, []);\n\n  // const getImageUrl = (path, size = 'w500') => {\n  //   const baseUrl = 'https://image.tmdb.org/t/p/';\n  //   return `${baseUrl}${size}/${path}`;\n  // };\n\n  return (\n    <div>\n      <h2>Trending Movies Today</h2>\n      <ul>\n        {trendingMovies.map(movie => (\n          <li key={movie.id}>\n            <Link to={`/goit-react-hw-05-movies/movie?id=${movie.id}`}>\n              <div>\n                <p>{movie.title}</p>\n              </div>\n            </Link>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default TrendList;\n"],"names":["API_KEY","fetchTrendingMovies","axios","params","api_key","response","data","results","console","error","handleSearch","query","fetchMovieDetails","movieId","fetchMovieCredits","fetchMovieReviews","useState","trendingMovies","setTrendingMovies","useEffect","fetchTrending","result","map","movie","to","id","title"],"sourceRoot":""}